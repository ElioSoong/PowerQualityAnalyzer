/****************************************Copyright (c)****************************************************
**
**                                       D.H. InfoTech
**
**--------------File Info---------------------------------------------------------------------------------
** File name:                  ClockThread.cpp
** Latest Version:             V1.0.0
** Latest modified Date:
** Modified by:
** Descriptions:
**
**--------------------------------------------------------------------------------------------------------
** Created by:                 Wang Longfei
** Created date:               2016/12/30
** Descriptions:               ClockThread class  [Generated by VP-UML, IGT1.0]
**
*********************************************************************************************************/
#include "ClockThread.h"
#include <QDebug>

ClockThread::ClockThread(QObject *parent)
    : QThread(parent)
    , m_interrupted(false)
{
    this->moveToThread(this);
    connect(this, &ClockThread::setRequest, 
        this, &ClockThread::setCurrentTime, Qt::QueuedConnection);
}


ClockThread::~ClockThread()
{
}

void ClockThread::setInterrupt()
{
    m_lock.lock();
    m_interrupted = true;
    m_lock.unlock();
    emit setRequest();
}

bool ClockThread::getInterrupt()
{
    m_lock.lock();
    bool theInterrupted = m_interrupted;
    m_lock.unlock();
    return theInterrupted;
}

void ClockThread::resetInterrupt()
{
    m_lock.lock();
    m_interrupted = false;
    m_lock.unlock();
}

void ClockThread::setCurrentTime()
{
    bool interrupted = getInterrupt();
    if (interrupted)
    {
        resetInterrupt();
        int ret = system("hwclock -w");
        if (ret < 0)
        {
            qDebug() << "Failed to set system time!";
        }
    }
}

void ClockThread::run()
{
    exec();
}
