/****************************************Copyright (c)****************************************************
**
**                             INNO Instrument(China) Co.Ltd.
**
**--------------File Info---------------------------------------------------------------------------------
** File name:                  IWidgetContainer.h
** Latest Version:             V1.0.0
** Latest modified Date:       2017/1/18
** Modified by:                
** Descriptions:               
**
**--------------------------------------------------------------------------------------------------------
** Created by:                 
** Created date:               2017/1/12
** Descriptions:               IWidgetContainer __interface  [Generated by VP-UML, IGT1.2]
** 
*********************************************************************************************************/
#ifndef __IWIDGETCONTAINER_H__
#define __IWIDGETCONTAINER_H__

#include "fieldlibrary_global.h"
#include <QWidget>
#include <QList>

class QSpacerItem;
class FIELDLIBRARY_EXPORT IWidgetContainer 
{
public:
    enum LayoutFlag
    {
        Horizontal = Qt::Horizontal,
        Vertical = Qt::Vertical,
        Grid = 0x1 | 0x2,
    };

    /*!
     * Constructor/
     */
    IWidgetContainer();
    virtual ~IWidgetContainer();

    /**
     * 添加一个子Widget到当前容器
     * @param[in] widget  需要添加的子Widget
     * @return       int
     */
    virtual int addWidget(QWidget* widget) = 0;

    /**
     * 从当前容器移除一个子Widget
     * @param[in] widget  需要移除的子Widget
     * @return       Return true on succeed, otherwise return false.
     */
    virtual bool removeWidget(QWidget* widget) = 0;

    /** 
     * 获取Widget容器的标题（例如QGroupBox的标题）
     * @return     QString Widget容器的标题（例如QGroupBox的标题）
     */
    virtual QString title() const
    {
        return QString();
    }

    /** 
     * 设置Widget容器的标题（例如QGroupBox的标题）
     * @param[in]  title Widget容器的标题（例如QGroupBox的标题）
     * @return     void
     */
    virtual void setTitle(const QString& title)
    {
        Q_UNUSED(title);
    }

    /*!
     * 初始化Tab页的每页的text；
     * 初始化ButtonGroup每个Button的text
     */
    virtual void setTextGroup(const QStringList& textList)
    {
        Q_UNUSED(textList);
    }
    /*!
     * 容器内容子窗口的延展性
     * 形式："1:1:1"
     */
    void setStretchs(QString strench)
    {
        QStringList strList = strench.split(QChar(':'), QString::SkipEmptyParts);
        foreach(QString s, strList)
        {
            m_strenchs.append(s.toInt());
        }
    }

    const QList<int>& strenchs() const
    {
        return m_strenchs;
    }

    void setSpacing(int spacing)
    {
        m_spacing = spacing;
    }

    int spacing() const
    {
        return m_spacing;
    }
    
    /*!
     * 在当前容器position指定的子窗口前加QSpacerItem；
     *  |ABC|,表示A、B、C三个子窗口。
       例如 position="0,1"窗口显示|A~|
     * 例如：position="1,2";窗口显示|~A~BC|
     * 例如：position="1,3,4";窗口显示|~AB~C~|
     * 例如：position="1,4";窗口显示|~ABC~|
     */
    void setPosition(const QString& position)
    {
        QStringList strList = position.split(",", QString::SkipEmptyParts);
        foreach(QString s, strList)  
        { 
            m_spacerPosition.append(s.toInt() - 1);
        }
        for (int index = 1; index < m_spacerPosition.size(); ++index)
        {
            addPosition(index);
        }
    }

    const QList<int>& position() const
    {
        return m_spacerPosition;
    }

private:
    void addPosition(int sinceIndex)
    {
        for (int index = sinceIndex; index < m_spacerPosition.size(); ++index)
        {
            m_spacerPosition.replace(index, m_spacerPosition.at(index) + 1);
        }
    }

private:
    QList<int>                 m_strenchs;
    int                        m_spacing;
    QList<int>                 m_spacerPosition; //!< QSpacerItem在布局中的索引
};
#define IWidgetContainer_IID "com.inno.IWidgetContainer"
Q_DECLARE_INTERFACE(IWidgetContainer, "com.inno.IWidgetContainer")

#endif
/*********************************************************************************************************
** End of file
*********************************************************************************************************/
